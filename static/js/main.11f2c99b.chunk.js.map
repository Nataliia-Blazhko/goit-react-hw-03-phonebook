{"version":3,"sources":["components/contactform/ContactForm.js","components/contactlist/ContactListItem.js","components/contactlist/ContactList.js","components/filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleInput","event","setState","target","value","clearForm","className","onSubmit","e","preventDefault","props","addContact","htmlFor","onChange","this","id","type","pattern","title","required","Component","ContactListItem","deleteContact","onClick","ContactList","list","filter","item","toLowerCase","includes","map","Filter","handleFilter","App","contacts","contact","uuid","find","person","alert","prevState","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11f2c99b.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInput = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  clearForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            this.props.addContact(this.state);\r\n            this.clearForm();\r\n          }}\r\n        >\r\n          <label htmlFor=\"name\" className=\"subtitle\">\r\n            Name\r\n          </label>\r\n          <input\r\n            onChange={this.handleInput}\r\n            value={this.state.name}\r\n            id=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <label htmlFor=\"number\" className=\"subtitle\">\r\n            Number\r\n          </label>\r\n          <input\r\n            onChange={this.handleInput}\r\n            value={this.state.number}\r\n            id=\"number\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button className=\"addContact\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = { addContact: PropTypes.func };\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class ContactListItem extends Component {\r\n  render() {\r\n    const { name, number, id, deleteContact } = this.props;\r\n    return (\r\n      <li className=\"person\">\r\n        {name} {number}\r\n        <button\r\n          className=\"deleteButton\"\r\n          onClick={() => deleteContact(id)}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import { Component } from \"react\";\r\nimport { ContactListItem } from \"./ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.list\r\n          .filter((item) =>\r\n            item.name.toLowerCase().includes(this.props.filter.toLowerCase())\r\n          )\r\n          .map((item) => (\r\n            <ContactListItem\r\n              key={item.id}\r\n              {...item}\r\n              deleteContact={this.props.deleteContact}\r\n            />\r\n          ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  list: PropTypes.arrayOf(PropTypes.object),\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p className=\"text\">Find contacts by name</p>\r\n        <input\r\n          value={this.props.filter}\r\n          onChange={this.props.handleFilter}\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nFilter.propTypes = { filter: PropTypes.string, handleFilter: PropTypes.func };\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\r\nimport { ContactForm } from \"./components/contactform/ContactForm\";\r\nimport { ContactList } from \"./components/contactlist/ContactList\";\r\nimport { Filter } from \"./components/filter/Filter\";\r\nimport \"./styles.scss\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (contact) => {\r\n    contact.id = uuid();\r\n    if (this.state.contacts.find((person) => person.name === contact.name)) {\r\n      alert(`${contact.name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (\r\n      this.state.contacts.find((person) => person.number === contact.number)\r\n    ) {\r\n      alert(`${contact.number} is already in contacts`);\r\n      return;\r\n    }\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: [...prevState.contacts, contact],\r\n      };\r\n    });\r\n  };\r\n\r\n  deleteContact = (id) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter filter={this.state.filter} handleFilter={this.handleFilter} />\r\n        <ContactList\r\n          filter={this.state.filter}\r\n          list={this.state.contacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}